data <- read.csv("Dry_Bean_Dataset.csv")
data <- na.omit(data)
#data <- data[, -c(1)]
View(data)
View(data)
data <- read.csv("Dry_Bean_Dataset.csv")
data <- na.omit(data)
data <- data[, -c(17)]
plot_withinss <- function(df, max_clusters){
withinss <- rep(0, max_clusters-1)
for (i in 2:max_clusters){
set.seed(1234)
withinss[i] <- sum(kmeans(df, i)$withinss)
}
plot(2:max_clusters, withinss[2:max_clusters], type="o", xlab="K", ylab="Within Sum Squares")
}
plot_withinss(retail, 12)
plot_withinss <- function(df, max_clusters){
withinss <- rep(0, max_clusters-1)
for (i in 2:max_clusters){
set.seed(1234)
withinss[i] <- sum(kmeans(df, i)$withinss)
}
plot(2:max_clusters, withinss[2:max_clusters], type="o", xlab="K", ylab="Within Sum Squares")
}
plot_withinss(retail, 12)
plot_withinss <- function(df, max_clusters){
withinss <- rep(0, max_clusters-1)
for (i in 2:max_clusters){
set.seed(1234)
withinss[i] <- sum(kmeans(df, i)$withinss)
}
plot(2:max_clusters, withinss[2:max_clusters], type="o", xlab="K", ylab="Within Sum Squares")
}
plot_withinss(data, 12)
data <- read.csv("Dry_Bean_Dataset.csv")
data <- na.omit(data)
data <- data[, -c(17)]
data <- scale(data)
plot_withinss <- function(df, max_clusters){
withinss <- rep(0, max_clusters-1)
for (i in 2:max_clusters){
set.seed(1234)
withinss[i] <- sum(kmeans(df, i)$withinss)
}
plot(2:max_clusters, withinss[2:max_clusters], type="o", xlab="K", ylab="Within Sum Squares")
}
plot_withinss(data, 12)
kmeansClust <- kmeans(data, 7, nstart=25)
kmeansClust
kmeansClust <- kmeans(data, 7, nstart=25)
kmeansClust
d <- dist(data)
fit.average <- hclust(d, method="average")
plot(fit.average, hang=-1, cex=.8, main="Hierarchical Clustering")
subsetData <- sample(data, 500)
d <- dist(subsetData)
fit.average <- hclust(d, method="average")
plot(fit.average, hang=-1, cex=.8, main="Hierarchical Clustering")
subsetData <- sample(data, 100)
d <- dist(subsetData)
fit.average <- hclust(d, method="average")
plot(fit.average, hang=-1, cex=.8, main="Hierarchical Clustering")
View(data)
subsetData <- data[, c(1,2,11)]
d <- dist(subsetData)
fit.average <- hclust(d, method="average")
plot(fit.average, hang=-1, cex=.8, main="Hierarchical Clustering")
View(subsetData)
subsetData <- data[, c(1,2,11)]
subsetData <- sample(subsetData, 100)
d <- dist(subsetData)
fit.average <- hclust(d, method="average")
plot(fit.average, hang=-1, cex=.8, main="Hierarchical Clustering")
subsetData <- data[, c(1,2,11)]
subsetData <- sample(subsetData, 50)
d <- dist(subsetData)
fit.average <- hclust(d, method="average")
plot(fit.average, hang=-1, cex=.8, main="Hierarchical Clustering")
subsetData <- data[, c(1,2,11)]
subsetData <- sample(subsetData, 30)
d <- dist(subsetData)
fit.average <- hclust(d, method="average")
plot(fit.average, hang=-1, cex=.8, main="Hierarchical Clustering")
subsetData <- data[, c(13,14,15,16)]
subsetData <- sample(subsetData, 30)
d <- dist(subsetData)
fit.average <- hclust(d, method="average")
plot(fit.average, hang=-1, cex=.8, main="Hierarchical Clustering")
subsetData <- data[, c(13,14,15,16)]
subsetData <- sample(subsetData, 6000)
d <- dist(subsetData)
fit.average <- hclust(d, method="average")
plot(fit.average, hang=-1, cex=.8, main="Hierarchical Clustering")
View(fit.average)
View(fit.average)
data <- read.csv("Dry_Bean_Dataset.csv")
data <- na.omit(data)
data <- data[, -c(17)]
#data <- scale(data)
subsetData <- data[, c(13,14,15,16)]
subsetData <- sample(subsetData, 6000)
subsetData <- data[, c(13,14,15,16)]
d <- dist(subsetData)
fit.average <- hclust(d, method="average")
plot(fit.average, hang=-1, cex=.8, main="Hierarchical Clustering")
data <- read.csv("Dry_Bean_Dataset.csv")
View(data)
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(data,
centers=i)$withinss)
data <- read.csv("Dry_Bean_Dataset.csv")
data <- na.omit(data)
data <- data[, -c(17)]
data <- scale(data)
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(data,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# K-Means Cluster Analysis
fit <- kmeans(data, 5) # 5 cluster solution
# get cluster means
aggregate(data,by=list(fit$cluster),FUN=mean)
# append cluster assignment
data_kmeans <- data.frame(data, fit$cluster)
View(data_kmeans)
rm(list=ls())
data <- read.csv("Dry_Bean_Dataset.csv")
data <- na.omit(data)
data <- data[, -c(17)]
data <- scale(data)
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(data,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# K-Means Cluster Analysis
fit <- kmeans(data, 7) # 5 cluster solution
# get cluster means
aggregate(data,by=list(fit$cluster),FUN=mean)
# append cluster assignment
data_kmeans <- data.frame(data, fit$cluster)
View(data_kmeans)
rm(list=ls())
data <- read.csv("Dry_Bean_Dataset.csv")
data <- na.omit(data)
data.scaled <- data[, -c(17)]
data.scaled <- scale(data.scaled)
wss <- (nrow(data.scaled)-1)*sum(apply(data.scaled,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(data.scaled,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# K-Means Cluster Analysis
fit <- kmeans(data.scaled, 7) # 7 cluster solution
# get cluster means
aggregate(data.scaled,by=list(fit$cluster),FUN=mean)
# append cluster assignment
data <- data.frame(data, fit$cluster)
View(data)
library(ggplot2)
cluster_vs_class <- data[, c(17,18)]
library(ggplot2)
cluster_vs_class <- data[, c(17,18)]
ggplot(cluster_vs_class, aes(fill = cluster, y = sum(cluster_vs_class$Class), x=Class) + geom_bar(position="stack", stat="identity"))
library(ggplot2)
cluster_vs_class <- data[, c(17,18)]
ggplot(cluster_vs_class, aes(fill = cluster, y = sum(cluster_vs_class$Class), x=Class))) + geom_bar(position="stack", stat="identity")
library(ggplot2)
cluster_vs_class <- data[, c(17,18)]
ggplot(cluster_vs_class, aes(fill = cluster, y = sum(cluster_vs_class$Class), x=Class)) + geom_bar(position="stack", stat="identity")
aggregate(cluster_vs_class$Class, list(cluster_vs_class$Class), FUN=sum)
aggregate(as.factor(cluster_vs_class$Class), list(as.factor(cluster_vs_class$Class), FUN=sum)
;
aggregate(as.factor(cluster_vs_class$Class), list(as.factor(cluster_vs_class$Class), FUN=sum)
;
aggregate(1, by=list(Category=cluster_vs_class$Class), FUN=sum)
library(ggplot2)
cluster_vs_class <- data[, c(17,18)]
ggplot(cluster_vs_class, aes(fill = cluster, y = Class, x=Class)) + geom_bar(position="stack", stat="identity")
library(ggplot2)
cluster_vs_class <- data[, c(17,18)]
ggplot(cluster_vs_class, aes(fill = fit.cluster, y = Class, x=Class)) + geom_bar(position="stack", stat="identity")
library(ggplot2)
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster))+
geom_point(aes(color=fit.cluster))
library(ggplot2)
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster))+
geom_point(aes(color=fit.cluster)) +
scale_color_manual(values=c('Yellow','Green','Red','Blue','Black','Brown','Orange'))
library(ggplot2)
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster))+
geom_point(aes(color=fit.cluster)) + scale_color_manual(values=c('Yellow','Green','Red','Blue','Black','Brown','Orange'))
library(ggplot2)
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster))+
geom_point(aes(color=fit.cluster))
library(ggplot2)
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster))+
geom_point(aes(color=fit.cluster)) +
scale_color_brewer(palette="Accent")
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster))+
geom_point(aes(color=fit.cluster)) +
scale_color_brewer(palette="Accent")
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster))+
geom_point(aes(color=fit.cluster)) +
scale_color_brewer(palette="Accent")
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster))+
geom_point(aes(color=fit.cluster)) + scale_color_brewer(palette="Accent")
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster))+
geom_point(aes(color=fit.cluster)) + scale_color_brewer(palette="Accent")
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster))+
geom_point(aes(color=fit.cluster)) + scale_color_brewer(palette="Accent")
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster))+
geom_point(aes(color=fit.cluster)) + scale_color_brewer(palette="Accent")
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster))+
geom_point(aes(color=fit.cluster)) + scale_color_brewer(palette="Accent")
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster))+
geom_point(aes(color=fit.cluster)) + scale_color_brewer(palette="Accent")
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster))+
geom_point(aes(color=fit.cluster)) + scale_color_brewer(palette="Accent")
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster))+
geom_point(aes(color=fit.cluster)) + scale_color_brewer(palette="Accent")
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster))+
geom_point(aes(color=fit.cluster)) + scale_color_brewer(palette="Accent")
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster))+
geom_point(aes(color=fit.cluster)) + scale_color_brewer(palette="Accent")
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=as.factor(fit.cluster))) +
geom_point(aes(color=fit.cluster)) + scale_color_brewer(palette="Accent")
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=as.factor(fit.cluster))) +
geom_point(aes(color=fit.cluster)) + scale_color_brewer(palette="Accent")
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=as.factor(fit.cluster))) +
geom_point(aes(color=fit.cluster)) + scale_color_brewer(palette="Accent")
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster)) +
geom_point(aes(color=fit.cluster))
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster)) +
geom_point(aes(color=fit.cluster)) + scale_color_continuous()
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster)) +
geom_point(aes(color=fit.cluster)) + scale_color_continuous( type = getOption("ggplot2.continuous.colour"))
d <- dist(data.scaled, method = "euclidean")
fit <- hclust(d, method = "ward")
plot(fit)
d <- dist(data.scaled, method = "euclidean")
fit <- hclust(d, method = "ward")
plot(fit)
groups <- cutree(fit, k = 7)
rect.hclust(fit, k=7, border = "red")
install.packages("pvclust")
library(pvclust)
fit <- pvclust(data.scaled, method.hclust="ward", method.dist="euclidean")
plot(fit)
pvrect(fit, alpha=.95)
library(pvclust)
t <- t(data.scaled)
fit <- pvclust(t, method.hclust="ward", method.dist="euclidean")
library(pvclust)
t <- t(data.scaled)
fit <- pvclust(t, method.hclust="ward", method.dist="euclidean")
d <- dist(data.scaled)
data <- read.csv("Dry_Bean_Dataset.csv")
data <- na.omit(data)
data.scaled <- data[, -c(17)]
data.scaled <- scale(data.scaled)
wss <- (nrow(data.scaled)-1)*sum(apply(data.scaled,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(data.scaled,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# K-Means Cluster Analysis
fit <- kmeans(data.scaled, 7) # 7 cluster solution
# get cluster means
aggregate(data.scaled,by=list(fit$cluster),FUN=mean)
# append cluster assignment
data <- data.frame(data, fit$cluster)
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster)) +
geom_point(aes(color=fit.cluster))
d <- dist(data.scaled)
fit.average <- hclust(d, method="average")
plot(fit.average, hang=-1, cex=.8,
main="Hierarchical Clustering")
View(data.scaled)
d <- dist(data.scaled[, c(13,14,15,16)])
fit.average <- hclust(d, method="average")
plot(fit.average, hang=-1, cex=.8,
main="Hierarchical Clustering")
d <- dist(sample(data.scaled[, c(13,14,15,16)],10))
fit.average <- hclust(d, method="average")
plot(fit.average, hang=-1, cex=.8,
main="Hierarchical Clustering")
d <- dist(sample(data.scaled[, c(13,14,15,16)],100))
fit.average <- hclust(d, method="average")
plot(fit.average, hang=-1, cex=.8,
main="Hierarchical Clustering")
d <- dist(sample(data.scaled[, c(13,14,15,16)],10))
fit.average <- hclust(d, method="average")
plot(fit.average, hang=-1, cex=.8,
main="Hierarchical Clustering")
d <- dist(sample(data.scaled[, c(13,14,15,16)],30))
fit.average <- hclust(d, method="average")
plot(fit.average, hang=-1, cex=.8,
main="Hierarchical Clustering")
install.packages("mclust")
library(mclust)
fit.m <- Mclust(data.scaled)
plot(fit)
library(mclust)
fit.m <- Mclust(data.scaled)
plot(fit.m)
set.seed(1234)
data <- read.csv("Dry_Bean_Dataset.csv")
data <- na.omit(data)
data.scaled <- data[, -c(17)]
data.scaled <- scale(data.scaled)
wss <- (nrow(data.scaled)-1)*sum(apply(data.scaled,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(data.scaled,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# K-Means Cluster Analysis
fit <- kmeans(data.scaled, 7) # 7 cluster solution
# get cluster means
aggregate(data.scaled,by=list(fit$cluster),FUN=mean)
# append cluster assignment
data <- data.frame(data, fit$cluster)
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster)) +
geom_point(aes(color=fit.cluster))
d <- dist(sample(data.scaled[, c(13,14,15,16)],30))
fit.average <- hclust(d, method="average")
plot(fit.average, hang=-1, cex=.8,
main="Hierarchical Clustering")
library(mclust)
fit.m <- Mclust(data)
summary(fit.m)
library(mclust)
fit.m <- Mclust(data)
plot(fit.m)
library(mclust)
fit.m <- Mclust(data)
plot(fit.m)
install.packages("cluster")
# Cluster Plot against 1st 2 principal components
# vary parameters for most readable graph
library(cluster)
clusplot(mydata, fit$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
set.seed(1234)
data <- read.csv("Dry_Bean_Dataset.csv")
data <- na.omit(data)
data.scaled <- data[, -c(17)]
data.scaled <- scale(data.scaled)
wss <- (nrow(data.scaled)-1)*sum(apply(data.scaled,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(data.scaled,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster)) +
geom_point(aes(color=fit.cluster))
# K-Means Cluster Analysis
fit <- kmeans(data.scaled, 7) # 7 cluster solution
# get cluster means
aggregate(data.scaled,by=list(fit$cluster),FUN=mean)
# append cluster assignment
data <- data.frame(data, fit$cluster)
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster)) +
geom_point(aes(color=fit.cluster))
# Cluster Plot against 1st 2 principal components
# vary parameters for most readable graph
library(cluster)
clusplot(mydata, fit$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
# Cluster Plot against 1st 2 principal components
# vary parameters for most readable graph
library(cluster)
clusplot(data, fit$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
# Centroid Plot against 1st 2 discriminant functions
library(fpc)
# Cluster Plot against 1st 2 principal components
# vary parameters for most readable graph
library(cluster)
clusplot(data, fit$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
# Centroid Plot against 1st 2 discriminant functions
library(fpc)
install.packages("fpc")
# Cluster Plot against 1st 2 principal components
# vary parameters for most readable graph
library(cluster)
clusplot(data, fit$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
# Centroid Plot against 1st 2 discriminant functions
library(fpc)
plotcluster(data, fit$cluster)
# Cluster Plot against 1st 2 principal components
# vary parameters for most readable graph
library(cluster)
clusplot(data.scaled, fit$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
# Centroid Plot against 1st 2 discriminant functions
library(fpc)
plotcluster(data.scaled, fit$cluster)
# Cluster Plot against 1st 2 principal components
# vary parameters for most readable graph
library(cluster)
clusplot(data.scaled, fit$cluster, color=TRUE,
labels=2, lines=0)
# Centroid Plot against 1st 2 discriminant functions
library(fpc)
plotcluster(data.scaled, fit$cluster)
library("ggplot2")
ggplot(data,aes(x=ShapeFactor1,y=ShapeFactor2,group=fit.cluster)) +
geom_point(aes(color=fit.cluster))
# Cluster Plot against 1st 2 principal components
# vary parameters for most readable graph
library(cluster)
clusplot(data.scaled, fit$cluster, color=TRUE,
labels=2, lines=0)
# Centroid Plot against 1st 2 discriminant functions
library(fpc)
plotcluster(data.scaled, fit$cluster)
data(head)
head(data[, c(17,18)])
head(data[, c(17,18)])
tail(data[, c(17,18)])
library(mclust)
fit.m <- Mclust(data)
summary(fit.m)
library(mclust)
BIC <- mclustBIC(data)
library(mclust)
fit.m <- Mclust(data)
summary(fit.m)
fit$withinss
sum(fit$withinss)
fit
options(max.print = 100)
fit
options(max.print = 500)
fit
options(max.print = 250)
fit
options(max.print = 250)
fit
